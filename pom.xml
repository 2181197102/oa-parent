<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.zy.oa</groupId>
  <artifactId>oa-parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>oa-parent</name>
  <url>http://maven.apache.org</url>
  <modules>
    <module>oa-organ</module>
    <module>oa-auth</module>
    <module>oa-flow</module>
    <module>oa-web</module>
    <module>oa-doc</module>
  </modules>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <springframework.release.version>4.3.30.RELEASE</springframework.release.version>
    <jackson.version>2.13.2</jackson.version>
  </properties>
  <!--  配置私服仓库  -->
  <distributionManagement>
    <repository>
      <id>nexus-releases</id>
      <name>Nexus Releases Repository</name>
      <url>http://localhost:8081/repository/maven-releases/</url>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <id>nexus-snapshots</id>
      <name>Nexus Snapshots Repository</name>
      <url>http://localhost:8081/repository/maven-snapshots/</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>
  <dependencyManagement>
    <dependencies>
      <!-- spring 依赖 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${springframework.release.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${springframework.release.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- aspectj -->
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>1.8.4</version>
      </dependency>
      <!-- 单元测试依赖 -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.1</version>
        <scope>test</scope>
      </dependency>
      <!-- 日志依赖 -->
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.12</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.6.6</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.6.6</version>
      </dependency>
      <!-- mybatis依赖 -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>3.2.1</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>1.2.0</version>
      </dependency>
      <!-- mysql驱动包 -->
      <dependency>
        <groupId>com.mysql</groupId>
        <artifactId>mysql-connector-j</artifactId>
        <version>8.0.33</version>
      </dependency>
      <!-- kafka依赖 -->
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_2.10</artifactId>
        <version>0.10.2.1</version>
      </dependency>
      <!-- servlet api -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>4.0.1</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.2</version>
      </dependency>
      <!-- json -->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>1.2.3</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <!-- 文件上传 -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.2.2</version>
      </dependency>
      <!-- oa系统的几个模块依赖 -->
      <dependency>
        <groupId>com.zy.oa</groupId>
        <artifactId>oa-organ</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.zy.oa</groupId>
        <artifactId>oa-auth</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.zy.oa</groupId>
        <artifactId>oa-flow</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <!-- 告诉 Maven 在 default 生命周期的 process-resource 阶段中，哪些资源文件需要被打到最终的 jar 包中 -->
    <resources>
      <!-- 第一个资源目录 -->
      <resource>
        <directory>src/main/java</directory>
        <!-- 资源目录是 src/main/java -->
        <includes>
          <include>**/*.xml</include>
          <!-- 只包含所有子目录下的 .xml 文件 -->
        </includes>
      </resource>
      <!-- 第二个资源目录 -->
      <resource>
        <directory>src/main/resources</directory>
        <!-- 资源目录是 src/main/resources -->
        <includes>
          <include>**/*.xml</include>
          <!-- 包含所有的 .xml 文件 -->
          <include>**/*.properties</include>
          <!-- 也包含所有的 .properties 文件 -->
        </includes>
        <filtering>true</filtering>
        <!-- 过滤 指的是 Maven 会把资源文件中的变量占位符替换成你在 Maven 配置（比如 pom.xml 中的 <properties>，或者外部 filter 文件）里定义的值。 -->
      </resource>
    </resources>
    <!-- 插件的配置 -->
    <pluginManagement>
      <plugins>
        <!-- 生成源码 jar 包的插件配置 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.1</version>
          <executions>
            <!-- 执行配置，可以在不同阶段执行不同的goal -->
            <execution>
              <!-- 此次执行的配置，往哪个 phase 上绑定哪些 goal -->
              <id>attach-sources</id>
              <!-- 此次执行的名字 -->
              <phase>verify</phase>
              <!-- 此次执行的阶段(phase) -->
              <goals>
                <goal>jar-no-fork</goal>
                <!-- 此次执行的功能(goal) -->
              </goals>
            </execution>
          </executions>
          <configuration>
            <outputDirectory>${project.build.directory}</outputDirectory>
            <!-- 输出目录 -->
          </configuration>
        </plugin>
        <!-- codehaus -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
